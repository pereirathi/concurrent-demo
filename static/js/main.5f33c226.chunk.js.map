{"version":3,"sources":["api/__generated__/storeQuery.graphql.js","fetchGraphQL.js","RelayEnvironment.js","components/atoms/layout/layout.js","api/store.js","App.js","reportWebVitals.js","index.js"],"names":["node","v0","v1","v2","v3","hash","module","exports","text","variables","a","fetch","method","headers","Authorization","body","JSON","stringify","query","response","json","fetchGraphQL","params","Environment","network","Network","create","store","Store","RecordSource","Layout","children","className","href","target","rel","STORE_PRODUCTS","CardProduct","lazy","preloadedQuery","loadQuery","filter","id","type","ProductSection","data","usePreloadedQuery","productItems","loadNewVisitorShowCase","showCase","shelves","map","item","items","App","environment","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","unstable_createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5f33c226.chunk.js","sourcesContent":["/**\r\n * @flow\r\n */\r\n\r\n/* eslint-disable */\r\n\r\n'use strict';\r\n\r\n/*::\r\nimport type { ConcreteRequest } from 'relay-runtime';\r\nexport type ShowCaseType = \"BANNER\" | \"BRAND\" | \"CATEGORY\" | \"CUSTOM\" | \"PRODUCT\" | \"PRODUCT_GROUP\" | \"PROMOTION\" | \"%future added value\";\r\nexport type ShowCaseFilter = {|\r\n  id?: ?string,\r\n  type?: ?ShowCaseType,\r\n|};\r\nexport type storeQueryVariables = {|\r\n  filter?: ?ShowCaseFilter\r\n|};\r\nexport type storeQueryResponse = {|\r\n  +loadNewVisitorShowCase: ?{|\r\n    +showCase: ?{|\r\n      +shelves: ?$ReadOnlyArray<?{|\r\n        +items: ?$ReadOnlyArray<?{|\r\n          +id: ?string,\r\n          +images: ?$ReadOnlyArray<?string>,\r\n          +displayName: ?string,\r\n        |}>\r\n      |}>\r\n    |}\r\n  |}\r\n|};\r\nexport type storeQuery = {|\r\n  variables: storeQueryVariables,\r\n  response: storeQueryResponse,\r\n|};\r\n*/\r\n\r\n\r\n/*\r\nquery storeQuery(\r\n  $filter: ShowCaseFilter\r\n) {\r\n  loadNewVisitorShowCase(filter: $filter) {\r\n    showCase {\r\n      shelves {\r\n        items {\r\n          id\r\n          images\r\n          displayName\r\n        }\r\n        id\r\n      }\r\n    }\r\n  }\r\n}\r\n*/\r\n\r\nconst node/*: ConcreteRequest*/ = (function(){\r\nvar v0 = [\r\n  {\r\n    \"defaultValue\": null,\r\n    \"kind\": \"LocalArgument\",\r\n    \"name\": \"filter\"\r\n  }\r\n],\r\nv1 = [\r\n  {\r\n    \"kind\": \"Variable\",\r\n    \"name\": \"filter\",\r\n    \"variableName\": \"filter\"\r\n  }\r\n],\r\nv2 = {\r\n  \"alias\": null,\r\n  \"args\": null,\r\n  \"kind\": \"ScalarField\",\r\n  \"name\": \"id\",\r\n  \"storageKey\": null\r\n},\r\nv3 = {\r\n  \"alias\": null,\r\n  \"args\": null,\r\n  \"concreteType\": \"ShelfItem\",\r\n  \"kind\": \"LinkedField\",\r\n  \"name\": \"items\",\r\n  \"plural\": true,\r\n  \"selections\": [\r\n    (v2/*: any*/),\r\n    {\r\n      \"alias\": null,\r\n      \"args\": null,\r\n      \"kind\": \"ScalarField\",\r\n      \"name\": \"images\",\r\n      \"storageKey\": null\r\n    },\r\n    {\r\n      \"alias\": null,\r\n      \"args\": null,\r\n      \"kind\": \"ScalarField\",\r\n      \"name\": \"displayName\",\r\n      \"storageKey\": null\r\n    }\r\n  ],\r\n  \"storageKey\": null\r\n};\r\nreturn {\r\n  \"fragment\": {\r\n    \"argumentDefinitions\": (v0/*: any*/),\r\n    \"kind\": \"Fragment\",\r\n    \"metadata\": null,\r\n    \"name\": \"storeQuery\",\r\n    \"selections\": [\r\n      {\r\n        \"alias\": null,\r\n        \"args\": (v1/*: any*/),\r\n        \"concreteType\": \"LoadShowCase\",\r\n        \"kind\": \"LinkedField\",\r\n        \"name\": \"loadNewVisitorShowCase\",\r\n        \"plural\": false,\r\n        \"selections\": [\r\n          {\r\n            \"alias\": null,\r\n            \"args\": null,\r\n            \"concreteType\": \"ShowCase\",\r\n            \"kind\": \"LinkedField\",\r\n            \"name\": \"showCase\",\r\n            \"plural\": false,\r\n            \"selections\": [\r\n              {\r\n                \"alias\": null,\r\n                \"args\": null,\r\n                \"concreteType\": \"Shelf\",\r\n                \"kind\": \"LinkedField\",\r\n                \"name\": \"shelves\",\r\n                \"plural\": true,\r\n                \"selections\": [\r\n                  (v3/*: any*/)\r\n                ],\r\n                \"storageKey\": null\r\n              }\r\n            ],\r\n            \"storageKey\": null\r\n          }\r\n        ],\r\n        \"storageKey\": null\r\n      }\r\n    ],\r\n    \"type\": \"Query\",\r\n    \"abstractKey\": null\r\n  },\r\n  \"kind\": \"Request\",\r\n  \"operation\": {\r\n    \"argumentDefinitions\": (v0/*: any*/),\r\n    \"kind\": \"Operation\",\r\n    \"name\": \"storeQuery\",\r\n    \"selections\": [\r\n      {\r\n        \"alias\": null,\r\n        \"args\": (v1/*: any*/),\r\n        \"concreteType\": \"LoadShowCase\",\r\n        \"kind\": \"LinkedField\",\r\n        \"name\": \"loadNewVisitorShowCase\",\r\n        \"plural\": false,\r\n        \"selections\": [\r\n          {\r\n            \"alias\": null,\r\n            \"args\": null,\r\n            \"concreteType\": \"ShowCase\",\r\n            \"kind\": \"LinkedField\",\r\n            \"name\": \"showCase\",\r\n            \"plural\": false,\r\n            \"selections\": [\r\n              {\r\n                \"alias\": null,\r\n                \"args\": null,\r\n                \"concreteType\": \"Shelf\",\r\n                \"kind\": \"LinkedField\",\r\n                \"name\": \"shelves\",\r\n                \"plural\": true,\r\n                \"selections\": [\r\n                  (v3/*: any*/),\r\n                  (v2/*: any*/)\r\n                ],\r\n                \"storageKey\": null\r\n              }\r\n            ],\r\n            \"storageKey\": null\r\n          }\r\n        ],\r\n        \"storageKey\": null\r\n      }\r\n    ]\r\n  },\r\n  \"params\": {\r\n    \"cacheID\": \"b8ea4c4e4b84b91ca03f96002b1a2641\",\r\n    \"id\": null,\r\n    \"metadata\": {},\r\n    \"name\": \"storeQuery\",\r\n    \"operationKind\": \"query\",\r\n    \"text\": \"query storeQuery(\\n  $filter: ShowCaseFilter\\n) {\\n  loadNewVisitorShowCase(filter: $filter) {\\n    showCase {\\n      shelves {\\n        items {\\n          id\\n          images\\n          displayName\\n        }\\n        id\\n      }\\n    }\\n  }\\n}\\n\"\r\n  }\r\n};\r\n})();\r\n// prettier-ignore\r\n(node/*: any*/).hash = '217038232267cab5dbe554137a3d3291';\r\n\r\nmodule.exports = node;\r\n","async function fetchGraphQL(text, variables) {\r\n  const response = await fetch('https://api.ze.delivery/public-api', {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: '',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      query: text,\r\n      variables,\r\n    }),\r\n  })\r\n\r\n  return response.json()\r\n}\r\n\r\nexport default fetchGraphQL\r\n","import {\r\n  Environment, Network, RecordSource, Store,\r\n} from 'relay-runtime'\r\nimport fetchGraphQL from './fetchGraphQL'\r\n\r\nasync function fetchRelay(params, variables) {\r\n  return fetchGraphQL(params.text, variables)\r\n}\r\n\r\nexport default new Environment({\r\n  network: Network.create(fetchRelay),\r\n  store: new Store(new RecordSource()),\r\n})\r\n","import PropTypes from 'prop-types'\r\nimport './layout.css'\r\n\r\n\r\nconst Layout = ({ children }) => (\r\n  <>\r\n    <header className=\"layout-header\">\r\n      <p>concurrent-mode demo</p>\r\n\t\t\t\t<a\r\n        className=\"layout-link\"\r\n        href=\"https://reactjs.org/docs/concurrent-mode-intro.html\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      \t>\r\n        Learn more about concurrent-mode\r\n      \t</a>\r\n    </header>\r\n\t\t<main>\r\n\t\t\t{children}\r\n\t\t</main>\r\n  </>\r\n\t)\t\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\n\r\nexport default Layout","import { graphql } from 'react-relay'\r\n\r\nexport const stellaProduct = {\r\n  id: '99148850-0ca6-41b8-8822-389bc7d2b992', type: 'BRAND',\r\n}\r\n\r\nexport const STORE_PRODUCTS = graphql`\r\n  query storeQuery($filter: ShowCaseFilter) {\r\n    loadNewVisitorShowCase(filter: $filter) {\r\n      showCase {\r\n        shelves {\r\n          items {\r\n            id\r\n            images\r\n            displayName\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { Suspense, lazy } from 'react'\r\nimport { RelayEnvironmentProvider, loadQuery, usePreloadedQuery } from 'react-relay/hooks'\r\nimport Environment from './RelayEnvironment'\r\nimport Layout  from './components/atoms/layout/layout'\r\nimport { STORE_PRODUCTS, stellaProduct } from './api/store'\r\n\r\nconst CardProduct = lazy(() => import('./components/atoms/card/card'))\r\n\r\nconst preloadedQuery = loadQuery(Environment, STORE_PRODUCTS, { filter: stellaProduct })\r\n\r\nconst ProductSection = () => {\r\n  const data = usePreloadedQuery(STORE_PRODUCTS, preloadedQuery)\r\n  const shelves = data?.loadNewVisitorShowCase?.showCase?.shelves ?? []\r\n  const productItems = shelves.map((item) => item.items)\r\n\r\n  return (\r\n    <>\r\n      <CardProduct items={productItems} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport function App() {\r\n  return (\r\n    <RelayEnvironmentProvider environment={Environment}>\r\n      <Layout>\r\n        <Suspense fallback=\"loading...\">\r\n          <ProductSection preloadedQuery={preloadedQuery} />\r\n        </Suspense>\r\n      </Layout>\r\n    </RelayEnvironmentProvider>\r\n  )\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport { App } from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.unstable_createRoot(\r\n  document.getElementById('root'),\r\n).render(<App />)\r\n\r\nreportWebVitals()\r\n"],"sourceRoot":""}