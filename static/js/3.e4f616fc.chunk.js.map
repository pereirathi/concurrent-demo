{"version":3,"sources":["utils/images.js","components/atoms/card/card.js"],"names":["NOT_FOUND_IMAGE","AUTO","FIT","isStaticImage","url","match","process","IMAGES_CDN_URL","isPngFile","test","getOptimizedUrl","mask","width","height","cornerRadius","ar","fit","dpr","auto","optimizedUrl","e","console","warn","ProductCard","items","map","product","className","src","images","alt","displayName","id"],"mappings":"uJAAA,IAEaA,EAAkB,oCAElBC,EACM,kBAGNC,EACN,MAaDC,EAAgB,SAACC,GAAD,OAASA,EAAIC,MAAM,iBAAmBC,mJAAYC,gBAExE,SAASC,EAAUJ,GAEjB,MADuB,QACDK,KAAKL,GAG7B,IA2BeM,EA3BS,SACtBN,GAKI,IAAD,yDAFC,GADFO,EAGC,EAHDA,KAAMC,EAGL,EAHKA,MAAOC,EAGZ,EAHYA,OAAQC,EAGpB,EAHoBA,aAGpB,IAHkCC,UAGlC,MAHuC,EAGvC,MAH0CC,WAG1C,MAHgDd,EAGhD,MAHyDe,WAGzD,MAnCc,EAmCd,MAH2EC,YAG3E,MAHkFjB,EAGlF,EACH,IACE,IAAKG,EAAK,OAAOJ,EAEjB,IAAImB,EAAY,UAAMf,EAAN,iBAAkBc,EAAlB,gBAA8BF,EAA9B,cAAuCJ,EAAvC,cAAkDC,GAAlD,OAA2DE,EAAE,cAAUA,GAAO,GAA9E,gBAAwFE,GAQxG,OANIN,IAAMQ,GAAY,gBAAaR,EAAb,0BAAmCG,IAErDN,EAAUJ,KAAMe,GAAgB,WAEhChB,EAAcC,KAAMe,EAAeb,mJAAYC,eAAiBY,GAE7DA,EACP,MAAOC,GAIP,GAFAC,QAAQC,KAAKF,IAERhB,EAAK,OAAOJ,I,gBC7BNuB,UApBK,SAAC,GAAD,SAAGC,MACjB,GAAGC,KAAI,SAAAC,GAAO,OAClB,8BACA,sBAAKC,UAAU,eAAf,UACA,qBAAKA,UAAU,aAAf,SACE,qBACIC,IAAKlB,EAAgBgB,EAAQG,OAAO,GAAI,CACxChB,OAAQ,IACRD,MAAO,MAEPkB,IAAI,WAGT,qBAAKH,UAAU,YAAf,SACA,6BAAKD,EAAQK,oBAZJL,EAAQM","file":"static/js/3.e4f616fc.chunk.js","sourcesContent":["const pixelRatio = 2\r\n\r\nexport const NOT_FOUND_IMAGE = '/static/img/product-not-found.png'\r\n\r\nexport const AUTO = {\r\n  COMPRESS_FORMAT: 'compress,format',\r\n}\r\n\r\nexport const FIT = {\r\n  MAX: 'max',\r\n  CROP: 'crop',\r\n  CLIP: 'clip',\r\n}\r\n\r\nexport const FORMAT = {\r\n  JPEG: 'jp2',\r\n}\r\n\r\nexport const MASK = {\r\n  CORNERS: 'corners',\r\n}\r\n\r\nconst isStaticImage = (url) => url.match('/static/img/') && process.env.IMAGES_CDN_URL\r\n\r\nfunction isPngFile(url) {\r\n  const extensionRegex = /\\.png/\r\n  return extensionRegex.test(url)\r\n}\r\n\r\nconst getOptimizedUrl = (\r\n  url,\r\n  {\r\n    mask, width, height, cornerRadius, ar = 0, fit = FIT.MAX, dpr = pixelRatio, auto = AUTO.COMPRESS_FORMAT,\r\n  } = {},\r\n// eslint-disable-next-line consistent-return\r\n) => {\r\n  try {\r\n    if (!url) return NOT_FOUND_IMAGE\r\n\r\n    let optimizedUrl = `${url}?auto=${auto}&fit=${fit}&w=${width}&h=${height}${ar ? `&ar=${ar}` : ''}&dpr=${dpr}`\r\n\r\n    if (mask) optimizedUrl += `&mask=${mask}&corner-radius=${cornerRadius}`\r\n\r\n    if (isPngFile(url)) optimizedUrl += '&fm=png'\r\n\r\n    if (isStaticImage(url)) optimizedUrl = process.env.IMAGES_CDN_URL + optimizedUrl\r\n\r\n    return optimizedUrl\r\n  } catch (e) {\r\n    // eslint-disable-next-line no-console\r\n    console.warn(e)\r\n\r\n    if (!url) return NOT_FOUND_IMAGE\r\n  }\r\n}\r\n\r\nexport default getOptimizedUrl\r\n","import getOptimizedUrl from '../../../utils/images'\r\nimport './card.css'\r\n\r\nconst ProductCard = ({ items }) => \r\nitems[0].map(product => (\r\n  <div key={product.id}>\r\n  <div className=\"card-product\">\r\n\t\t<div className=\"card-image\">\r\n\t\t  <img\r\n        src={getOptimizedUrl(product.images[0], {\r\n        height: 180,\r\n        width: 230,\r\n        })}\r\n        alt=\"none\"\r\n      />\r\n\t\t</div>\r\n\t  <div className=\"card-info\">       \r\n\t\t\t<h3>{product.displayName}</h3>\r\n\t\t</div>\r\n  </div>\r\n  </div>\r\n))\r\n\r\nexport default ProductCard\r\n"],"sourceRoot":""}