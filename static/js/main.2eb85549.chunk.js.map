{"version":3,"sources":["api/__generated__/storeQuery.graphql.js","fetchGraphQL.js","RelayEnvironment.js","components/atoms/layout/layout.js","api/store.js","App.js","reportWebVitals.js","index.js"],"names":["node","v0","v1","v2","v3","hash","module","exports","text","variables","a","fetch","method","headers","Authorization","body","JSON","stringify","query","response","json","fetchGraphQL","params","Environment","network","Network","create","store","Store","RecordSource","Layout","children","className","href","target","rel","STORE_PRODUCTS","CardProduct","lazy","preloadedQuery","loadQuery","filter","id","type","ProductSection","data","usePreloadedQuery","productItems","loadNewVisitorShowCase","showCase","shelves","map","item","items","App","environment","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","unstable_createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2eb85549.chunk.js","sourcesContent":["/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type ShowCaseType = \"BANNER\" | \"BRAND\" | \"CATEGORY\" | \"CUSTOM\" | \"PRODUCT\" | \"PRODUCT_GROUP\" | \"PROMOTION\" | \"%future added value\";\nexport type ShowCaseFilter = {|\n  id?: ?string,\n  type?: ?ShowCaseType,\n|};\nexport type storeQueryVariables = {|\n  filter?: ?ShowCaseFilter\n|};\nexport type storeQueryResponse = {|\n  +loadNewVisitorShowCase: ?{|\n    +showCase: ?{|\n      +shelves: ?$ReadOnlyArray<?{|\n        +items: ?$ReadOnlyArray<?{|\n          +id: ?string,\n          +images: ?$ReadOnlyArray<?string>,\n          +displayName: ?string,\n        |}>\n      |}>\n    |}\n  |}\n|};\nexport type storeQuery = {|\n  variables: storeQueryVariables,\n  response: storeQueryResponse,\n|};\n*/\n\n\n/*\nquery storeQuery(\n  $filter: ShowCaseFilter\n) {\n  loadNewVisitorShowCase(filter: $filter) {\n    showCase {\n      shelves {\n        items {\n          id\n          images\n          displayName\n        }\n        id\n      }\n    }\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"filter\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"filter\",\n    \"variableName\": \"filter\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"ShelfItem\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"items\",\n  \"plural\": true,\n  \"selections\": [\n    (v2/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"images\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"displayName\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"storeQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"LoadShowCase\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"loadNewVisitorShowCase\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"ShowCase\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"showCase\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Shelf\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"shelves\",\n                \"plural\": true,\n                \"selections\": [\n                  (v3/*: any*/)\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"storeQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"LoadShowCase\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"loadNewVisitorShowCase\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"ShowCase\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"showCase\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Shelf\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"shelves\",\n                \"plural\": true,\n                \"selections\": [\n                  (v3/*: any*/),\n                  (v2/*: any*/)\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"b8ea4c4e4b84b91ca03f96002b1a2641\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"storeQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query storeQuery(\\n  $filter: ShowCaseFilter\\n) {\\n  loadNewVisitorShowCase(filter: $filter) {\\n    showCase {\\n      shelves {\\n        items {\\n          id\\n          images\\n          displayName\\n        }\\n        id\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '217038232267cab5dbe554137a3d3291';\n\nmodule.exports = node;\n","async function fetchGraphQL(text, variables) {\n  const response = await fetch('https://api.ze.delivery/public-api', {\n    method: 'POST',\n    headers: {\n      Authorization: '',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query: text,\n      variables,\n    }),\n  })\n\n  return response.json()\n}\n\nexport default fetchGraphQL\n","import {\n  Environment, Network, RecordSource, Store,\n} from 'relay-runtime'\nimport fetchGraphQL from './fetchGraphQL'\n\nasync function fetchRelay(params, variables) {\n  return fetchGraphQL(params.text, variables)\n}\n\nexport default new Environment({\n  network: Network.create(fetchRelay),\n  store: new Store(new RecordSource()),\n})\n","import PropTypes from 'prop-types'\nimport './layout.css'\n\n\nconst Layout = ({ children }) => (\n  <>\n    <header className=\"layout-header\">\n      <p>concurrent-mode demo</p>\n\t\t\t\t<a\n        className=\"layout-link\"\n        href=\"https://reactjs.org/docs/concurrent-mode-intro.html\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      \t>\n        Learn more about concurrent-mode\n      \t</a>\n    </header>\n\t\t<main>\n\t\t\t{children}\n\t\t</main>\n  </>\n\t)\t\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\n\nexport default Layout","import { graphql } from 'react-relay'\n\nexport const stellaProduct = {\n  id: '99148850-0ca6-41b8-8822-389bc7d2b992', type: 'BRAND',\n}\n\nexport const STORE_PRODUCTS = graphql`\n  query storeQuery($filter: ShowCaseFilter) {\n    loadNewVisitorShowCase(filter: $filter) {\n      showCase {\n        shelves {\n          items {\n            id\n            images\n            displayName\n          }\n        }\n      }\n    }\n  }\n`\n","import { Suspense, lazy } from 'react'\nimport { RelayEnvironmentProvider, loadQuery, usePreloadedQuery } from 'react-relay/hooks'\nimport Environment from './RelayEnvironment'\nimport Layout  from './components/atoms/layout/layout'\nimport { STORE_PRODUCTS, stellaProduct } from './api/store'\n\nconst CardProduct = lazy(() => import('./components/atoms/card/card'))\n\nconst preloadedQuery = loadQuery(Environment, STORE_PRODUCTS, { filter: stellaProduct })\n\nconst ProductSection = () => {\n  const data = usePreloadedQuery(STORE_PRODUCTS, preloadedQuery)\n  const shelves = data?.loadNewVisitorShowCase?.showCase?.shelves ?? []\n  const productItems = shelves.map((item) => item.items)\n\n  return (\n    <>\n      <CardProduct items={productItems} />\n    </>\n  )\n}\n\nexport function App() {\n  return (\n    <RelayEnvironmentProvider environment={Environment}>\n      <Layout>\n        <Suspense fallback=\"loading...\">\n          <ProductSection preloadedQuery={preloadedQuery} />\n        </Suspense>\n      </Layout>\n    </RelayEnvironmentProvider>\n  )\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.unstable_createRoot(\n  document.getElementById('root'),\n).render(<App />)\n\nreportWebVitals()\n"],"sourceRoot":""}